{"version":3,"sources":["core/Brainfuck.ts","svg/logo.svg","components/Header.tsx","components/CodeForm.tsx","components/Result.tsx","components/CodeViewer.tsx","components/MemoryViewer.tsx","svg/github.svg","components/Footer.tsx","components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["Status","Brainfuck","code","opt","memory","ptr","codePointer","breakPoints","status","commands","jumpByOpen","jumpByClose","this","defaultOption","onChangeCodePointer","_","onChangeMemory","onChangeStatus","write","read","stdin","shift","charCodeAt","memorySize","cellBits","inc","dec","nxt","prv","put","get","opn","cls","Object","assign","reset","Int8Array","fill","jumpList","reduce","acc","v","values","changeStatus","STOPPED","nestCount","start","currentCode","slice","i","command","find","c","startsWith","push","Error","length","a","trace","RUNNING","pre","Promise","resolve","setTimeout","undefined","post","_step","includes","STOPPING","bp","filter","e","END","Header","Navbar","bg","Brand","href","className","alt","src","logoSvg","width","height","CodeForm","props","useState","createRef","Form","Row","Label","Control","as","aria-label","rows","onChange","onUpdateCode","target","value","errorMessage","ButtonGroup","Button","variant","onClick","onStop","disabled","onReset","Check","label","ref","onRun","current","checked","onStep","Result","result","CodeViewer","handleClickToken","Number","getAttribute","onSetBreakPoint","index","isBreakPoints","isCurrent","map","data-key","MemoryViewer","chunk","l","m","j","Col","padStart","Footer","githubSvg","App","interpreter","setInterpreter","setCode","setCodePointer","setMemory","setPtr","setStatus","setBreakPoints","setResult","setErrorMessage","initState","newInterpreter","Container","fluid","sm","n","s","String","fromCodePoint","err","message","run","step","stop","setBreakPoint","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7463894.chunk.js","sourcesContent":["type Write = (char: number) => void;\ntype Read = () => number;\ntype CodePointTracer = (number) => void;\ntype MemoryTracer = (memory: Int8Array, ptr: number) => void;\ntype OnChangeStatus = (status: Status) => void;\n\ntype Option = {\n  onChangeCodePointer?: CodePointTracer;\n  onChangeMemory?: MemoryTracer;\n  onChangeStatus?: OnChangeStatus;\n  write?: Write;\n  read?: Read;\n  memorySize?: number;\n  cellBits?: 8 | 16 | 32;\n  commands?: {\n    inc: string;\n    dec: string;\n    nxt: string;\n    prv: string;\n    put: string;\n    get: string;\n    opn: string;\n    cls: string;\n  }\n};\n\nexport enum Status {\n  RUNNING,\n  STOPPING,\n  STOPPED,\n  END\n}\n\nexport class Brainfuck {\n\n  opt: Option;\n  memory: Int8Array;\n  ptr: number;\n  code: string;\n  codePointer: number;\n  breakPoints: number[];\n  status: Status = null;\n\n  commands: string[];\n  jumpByOpen;\n  jumpByClose;\n\n  constructor(code: string, opt?: Option) {\n    this.code = code;\n    const defaultOption: Option = {\n      onChangeCodePointer: _ => {},\n      onChangeMemory: _ => {},\n      onChangeStatus: _ => {},\n      write: _ => {},\n      read: (() => {\n        const stdin = [...'Hello, World!'];\n        return () => {\n          return stdin.shift()?.charCodeAt(0) || -1;\n        }\n      })(), // TODO\n      memorySize: 1024,\n      cellBits: 8,\n      commands: {\n        inc: '+',\n        dec: '-',\n        nxt: '>',\n        prv: '<',\n        put: '.',\n        get: ',',\n        opn: '[',\n        cls: ']',\n      }\n    }\n    this.opt = Object.assign(defaultOption, opt);\n    this.reset();\n  }\n\n  reset() {\n    this.memory = new Int8Array(this.opt.memorySize).fill(0);\n    this.ptr = 0;\n    this.codePointer = 0;\n    const jumpList = this.jumpList();\n    this.jumpByOpen = jumpList.reduce((acc, v)=>{\n      acc[v[0]] = v[1];\n      return acc;\n    },{});\n    this.jumpByClose = jumpList.reduce((acc, v)=>{\n      acc[v[1]] = v[0];\n      return acc;\n    },{});\n    this.commands = Object.values(this.opt.commands);\n    this.opt.onChangeCodePointer(this.codePointer);\n    this.opt.onChangeMemory(this.memory, this.ptr);\n    this.changeStatus(Status.STOPPED);\n    this.breakPoints = [];\n  }\n\n  jumpList(): number[][] {\n    const jumpList = [];\n    const commands = Object.values(this.opt.commands);\n    let nestCount = 0;\n    let start = 0;\n    for (let i = 0; this.code[i];) {\n      const currentCode = this.code.slice(i);\n      const command = commands.find(c => currentCode.startsWith(c));\n      if (command === this.opt.commands.opn) {\n        if (nestCount === 0) {\n          start = i;\n        }\n        nestCount++;\n      } else if (command === this.opt.commands.cls) {\n        if (start !== 0) {\n          nestCount--;\n          if (nestCount === 0) {\n            jumpList.push([start, i]);\n            i = start;\n            start = 0;\n          }\n        } else if (!jumpList.find(v => v[1] === i)) {\n          throw Error(`Syntax error: ${this.opt.commands.opn} expected.(index: ${i})`);\n        }\n      }\n      i += command?.length || 1;\n    }\n    if (start !== 0) {\n      throw Error(`Syntax error: ${this.opt.commands.cls} expected.(index: ${(start)})`);\n    }\n    return jumpList;\n  }\n\n  async run(trace=false) {\n    this.changeStatus(Status.RUNNING);\n    const pre = trace ? async() => {\n          await new Promise<void>(resolve =>{\n            setTimeout(resolve);\n          });\n        } : undefined;\n    const post = trace ? async() => {\n      this.opt.onChangeCodePointer(this.codePointer);\n      this.opt.onChangeMemory(this.memory, this.ptr);\n    } : undefined;\n\n    while (this.code[this.codePointer] && this.status === Status.RUNNING) {\n      await this._step(pre, post);\n      if (this.breakPoints.includes(this.codePointer)) {\n        break;\n      }\n    }\n    this.changeStatus(Status.STOPPED);\n    this.opt.onChangeCodePointer(this.codePointer);\n    this.opt.onChangeMemory(this.memory, this.ptr);\n  }\n\n  stop() {\n    this.changeStatus(Status.STOPPING);\n  }\n\n  setBreakPoint(bp: number) {\n    if (this.breakPoints.includes(bp)) {\n      this.breakPoints = this.breakPoints.filter(e => e !== bp);\n    } else {\n      this.breakPoints.push(bp);\n    }\n  }\n\n  async step() {\n    this.changeStatus(Status.RUNNING);\n    const pre = async() => {\n          await new Promise<void>(resolve =>{\n            setTimeout(resolve);\n          });\n        };\n    const post = async() => {\n      this.opt.onChangeCodePointer(this.codePointer);\n      this.opt.onChangeMemory(this.memory, this.ptr);\n    };\n    this._step(pre, post);\n    this.changeStatus(Status.STOPPED);\n  }\n\n  private async _step(pre: Function = () => {}, post: Function= () => {}) {\n    await pre();\n    const currentCode = this.code.slice(this.codePointer);\n    const command = this.commands.find(c => currentCode.startsWith(c));\n    if (command === this.opt.commands.opn) {\n      if (this.memory[this.ptr] === 0) {\n        this.codePointer = this.jumpByOpen[this.codePointer];\n      }\n    } else if (command === this.opt.commands.cls) {\n      if (this.memory[this.ptr] !== 0) {\n        this.codePointer = this.jumpByClose[this.codePointer] - 1;\n      }\n    } else if (command === this.opt.commands.nxt) {\n      this.ptr = this.ptr < this.opt.memorySize - 1 ? this.ptr + 1 : 0;\n    } else if (command === this.opt.commands.prv) {\n      this.ptr = this.ptr > 0 ? this.ptr - 1 : this.opt.memorySize - 1;\n    } else if (command === this.opt.commands.inc) {\n      this.memory[this.ptr]++;\n    } else if (command === this.opt.commands.dec) {\n      this.memory[this.ptr]--;\n    } else if (command === this.opt.commands.put) {\n      this.opt.write(this.memory[this.ptr]);\n    } else if (command === this.opt.commands.get) {\n      this.memory[this.ptr] = this.opt.read() || 0;\n    } else {\n      // do nothing\n    }\n    if (command) {\n      this.codePointer += command.length;\n      await post();\n    } else {\n      this.codePointer++;\n    }\n  }\n\n  changeStatus(status: Status) {\n    if (this.status !== status) {\n      if (!this.code[this.codePointer]) {\n        this.status = Status.END;\n      } else {\n        this.status = status;\n      }\n      this.opt.onChangeStatus(this.status);\n    }\n  }\n};\n","export default __webpack_public_path__ + \"static/media/logo.205d7a80.svg\";","import { Navbar } from 'react-bootstrap';\nimport logoSvg from '../svg/logo.svg';\n\nconst Header = () => {\n  return (\n    <header>\n      <Navbar bg=\"dark\">\n        <Navbar.Brand href=\"#home\">\n          <div className='site-name'>\n            <img\n              alt=\"\"\n              src={logoSvg}\n              width=\"30\"\n              height=\"30\"\n              className=\"d-inline-block align-top\"\n            />{' '}\n            Brainfuck Interpreter\n          </div>\n        </Navbar.Brand>\n      </Navbar>\n    </header>\n  );\n}\n\nexport default Header;\n","import {useState, createRef} from 'react';\nimport { Form, ButtonGroup, Button } from 'react-bootstrap';\nimport { Status } from '../core/Brainfuck';\n\ninterface Props {\n  onUpdateCode: (string) => void,\n  onRun: (boolean) => void,\n  onStep: () => void,\n  onStop:() => void,\n  onReset:() => void,\n  status: Status,\n  errorMessage: String\n};\n\nconst CodeForm = (props: Props) => {\n\n  const [ trace ] = useState<React.RefObject<HTMLInputElement>>(createRef());\n\n  const handleChangeCode = (e) => {\n    props.onUpdateCode(e.target.value);\n  };\n\n  const handleClickRun = (_) => {\n    props.onRun(trace.current.checked);\n  };\n\n  const handleClickStep = (_) => {\n    props.onStep();\n  };\n\n  const handleClickStop = (_) => {\n    props.onStop();\n  };\n\n  const handleClickReset = (_) => {\n    props.onReset();\n  };\n\n  return (\n    <div>\n      <Form>\n        <Form.Row className=\"mb-1\">\n          <Form.Label>Code</Form.Label>\n          <Form.Control as=\"textarea\" aria-label=\"code\" rows={10} onChange={handleChangeCode} />\n        </Form.Row>\n        <Form.Row className=\"mb-4\">\n          <p className=\"text-danger\">{props.errorMessage}</p>\n        </Form.Row>\n        {/* <Form.Row className=\"mb-4\">\n          <Form.Label>Stdin</Form.Label>\n          <Form.Control as=\"textarea\" aria-label=\"stdin\" rows={3} ref={this.stdin} />\n        </Form.Row> */}\n      </Form>\n      <Form.Row className=\"d-flex\">\n        <div className=\"mr-auto\">\n          <ButtonGroup>\n            <Button variant=\"secondary\" onClick={handleClickStop} disabled={props.status !== Status.RUNNING}>STOP</Button>\n            <Button variant=\"secondary\" onClick={handleClickReset} disabled={props.status === null || (props.status !== Status.STOPPED && props.status !== Status.END)}>RESET</Button>\n          </ButtonGroup>\n        </div>\n        <div className=\"mr-4\">\n          <Form.Check label=\"STEP TRACE\" ref={trace} />\n        </div>\n        <div>\n          <ButtonGroup>\n            <Button variant=\"info\" onClick={handleClickRun} disabled={props.status === null || props.status !== Status.STOPPED}>RUN</Button>\n            <Button variant=\"info\" onClick={handleClickStep} disabled={props.status === null || props.status !== Status.STOPPED}>STEP</Button>\n          </ButtonGroup>\n        </div>\n      </Form.Row>\n    </div>\n  );\n}\n\nexport default CodeForm;\n","import { Form } from 'react-bootstrap';\n\ninterface Props {\n  result: string\n};\n\nconst Result = (props: Props) => {\n  return (\n    <Form>\n      <Form.Label>Result</Form.Label>\n      <Form.Row className=\"result\">\n        <pre className=\"m-4\">\n          {props.result}\n        </pre>\n      </Form.Row>\n    </Form>\n  );\n};\n\nexport default Result;\n","import { Form } from 'react-bootstrap';\nimport * as _ from 'lodash';\n\ninterface Props {\n  code: string,\n  codePointer: number,\n  breakPoints: number[],\n  onSetBreakPoint: (number) => void,\n};\n\nconst CodeViewer = (props: Props) => {\n\n  const handleClickToken = (e) => {\n    const bp = Number(e.target.getAttribute('data-key'));\n    props.onSetBreakPoint(bp);\n  };\n\n  const className = (index: number) => {\n    const isBreakPoints = props.breakPoints.includes(index);\n    const isCurrent = index === props.codePointer;\n    if (isBreakPoints && isCurrent) {\n      return 'token bg-secondary px-1';\n    } else if (isBreakPoints) {\n      return 'token bg-danger px-1';\n    } else if (isCurrent) {\n      return 'token bg-info px-1';\n    } else {\n      return 'token px-1';\n    }\n  };\n\n  const code = () => {\n    if (!props.code) {\n      return null;\n    };\n    return _([...props.code, 'EOF'])\n      .map(c => c === ' ' ? '\\u00A0': c)\n      .map((c, i) => c === '\\n' ? <br key={i} /> : <span onClick={handleClickToken} data-key={i} key={i} className={className(i)}>{c}</span>)\n      .value();\n  }\n\n  return (\n    <Form>\n      <Form.Label>Code Viewer</Form.Label>\n      <Form.Row  className=\"code\">\n        {code()}\n      </Form.Row>\n    </Form>\n  );\n}\n\nexport default CodeViewer;\n","import { Row, Col, Form } from 'react-bootstrap';\nimport * as _ from 'lodash';\n\ninterface Props {\n  memory: Int8Array,\n  ptr: number\n};\n\nconst MemoryViewer = (props: Props) => {\n  const memory = () => {\n    if (!props.memory) {\n      return null;\n    }\n    return _(props.memory)\n      .chunk(16)\n      .map((l, i) => <Row key={i}>{_.map(l, (m, j)=><Col key={i * 16 + j}><code className={props.ptr === i * 16 + j ? 'bg-light' : ''}>{`${m}`.padStart(3, '0')}</code></Col>)}</Row>)\n      .value();\n  }\n\n  return (\n    <Form>\n      <Form.Label>Memory Viewer</Form.Label>\n      <Form.Row className=\"memory\">\n        {memory()}\n      </Form.Row>\n    </Form>\n  );\n};\n\nexport default MemoryViewer;\n","export default __webpack_public_path__ + \"static/media/github.c18574d3.svg\";","import { Navbar } from 'react-bootstrap';\nimport githubSvg from '../svg/github.svg'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Navbar bg=\"dark\" className=\"d-flex justify-content-around\">\n        <Navbar.Brand href=\"https://github.com/omurakazuaki/brainfuck-interpreter\" target=\"_blank\">\n          <div className='footer-link'>\n            <img\n              alt=\"\"\n              src={githubSvg}\n              width=\"24\"\n              height=\"24\"\n              className=\"d-inline-block align-top\"\n            />{' '}\n            source\n          </div>\n        </Navbar.Brand>\n      </Navbar>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Brainfuck, Status } from '../core/Brainfuck';\nimport Header from './Header';\nimport CodeForm from './CodeForm';\nimport Result from './Result';\nimport CodeViewer from './CodeViewer';\nimport MemoryViewer from './MemoryViewer';\nimport Footer from './Footer';\nimport '../css/App.scss';\n\nconst App = () => {\n\n  const [interpreter, setInterpreter] = useState<Brainfuck>(null);\n  const [code, setCode] = useState<string>(null);\n  const [codePointer, setCodePointer] = useState<number>(null);\n  const [memory, setMemory] = useState<Int8Array>(null);\n  const [ptr, setPtr] = useState<number>(null);\n  const [status, setStatus] = useState<Status>(null);\n  const [breakPoints, setBreakPoints] = useState<number[]>([]);\n  const [result, setResult] = useState<string>('');\n  const [errorMessage, setErrorMessage] = useState<string>(null);\n\n  const handleChangeCode = (code: string) => {\n    try {\n      const newInterpreter = new Brainfuck(code, {\n        write: (n: number) => {\n          if (n < 0) return;\n          setResult(s => s + String.fromCodePoint(n));\n        },\n        onChangeCodePointer: setCodePointer,\n        onChangeMemory: (memory: Int8Array, ptr: number) => {\n          setMemory(memory);\n          setPtr(ptr);\n        },\n        onChangeStatus: setStatus,\n      });\n      setInterpreter(newInterpreter);\n      initState(newInterpreter);\n    } catch (err) {\n      setErrorMessage(err.message);\n    }\n  }\n\n  const initState = (newInterpreter: Brainfuck) => {\n      setCode(newInterpreter.code);\n      setBreakPoints(newInterpreter.breakPoints);\n      setResult('');\n      setErrorMessage(null);\n  }\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <Header/>\n      <Container className='base' fluid={true}>\n        <Row>\n          <Col sm={4}>\n            <Row className=\"m-4\">\n              <Col>\n                <CodeForm\n                  status={status}\n                  errorMessage={errorMessage}\n                  onUpdateCode={handleChangeCode}\n                  onRun={trace => interpreter.run(trace)}\n                  onStep={() => interpreter.step()}\n                  onStop={() => interpreter.stop()}\n                  onReset={() => {\n                    interpreter.reset();\n                    initState(interpreter)\n                    }\n                  } />\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"m-4\">\n                <Result result={result} />\n              </Col>\n            </Row>\n          </Col>\n          <Col sm={8}>\n            <Row>\n              <Col className=\"m-4\">\n                <CodeViewer\n                  code={code}\n                  codePointer={codePointer}\n                  breakPoints={breakPoints}\n                  onSetBreakPoint={bp => {\n                    interpreter.setBreakPoint(bp);\n                    setBreakPoints([...interpreter.breakPoints]);\n                    }\n                  } />\n              </Col>\n            </Row>\n            <Row>\n              <Col className=\"m-4\">\n                <MemoryViewer\n                  memory={memory}\n                  ptr={ptr} />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n      <Footer/>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}